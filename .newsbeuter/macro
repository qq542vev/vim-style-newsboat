#!/usr/bin/newsbeuter -C

### File: macro
##
## Macros for Newsbeuter.
##
## Usage:
##
##   (start code)
##   include "~/.newsbeuter/macro"
##   (end)
##
## Metadata:
##
##   id - 9c48454a-0747-41d6-861b-35e4dffe81b5
##   author - <qq542vev at https://purl.org/meta/me/>
##   version - 1.6.0
##   date - 2022-09-06
##   since - 2020-08-22
##   copyright - Copyright (C) 2020 - 2021 qq542vev. Some rights reserved.
##   license - <CC-BY at https://creativecommons.org/licenses/by/4.0/>
##   package - vim-style-newsboat
##
## See Also:
##
##   * <Project homepage at https://github.com/qq542vev/vim-style-newsboat>
##   * <Bag report at https://github.com/qq542vev/vim-style-newsboat/issues>

####  macro
#
# With this command, you can define a macro key and specify a list of commands
# that shall be executed when the macro prefix and the macro key are pressed.
#
# Syntax: <macro key> <command list>
#
# Default value: n/a
#
# macro k open ; reload ; quit

macro ^ view-dialogs ; open
macro $ view-dialogs ; open ; prev-dialog

macro 0 set browser "echo 'Enter the command to open the URL. Exit if not entered'; printf 'Command: '; read -r 'browser'; case ${browser-} in ?*) ${browser} %u;; esac" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"

macro 1 set browser "firefox %u &" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"
macro 2 set browser "chromium %u &" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"

macro 3 pipe-to "${MAILER-mutt --} 'mailto:?body='$(urlencode)"
# macro 3 set browser "${MAILER:-mutt --} 'mailto:?body='$(echo %u | urlencode)" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"

macro 4 set browser "qrencode -t 'UTF8' -- %u; printf 'Exit with Ctrl-C or Enter Key'; read -r 'REPLY'" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"

macro 5 set browser "lynx -- %u" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"
macro 6 set browser "w3m %u" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"

macro 7 set browser "wget -b -- %u" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"
macro 8 set browser "curl -L -O -sS -- %u &" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"
macro 9 set browser "youtube-dl -q -- %u &" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"

macro b open ; prev-dialog
macro i pipe-to "tmpFile=$(mktemp); cat >${tmpFile}; ${VISUAL:-${EDITOR:-vi --}} ${tmpFile} <'/dev/tty'; rm -f -- ${tmpFile}"

macro J set goto-next-feed "no" ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; next ; open ; quit ; set goto-next-feed "yes"
macro K set goto-next-feed "no" ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; prev ; open ; quit ; set goto-next-feed "yes"

macro m view-dialogs ; open ; set-filter "feedtitle = \"Flagged Articles\"" ; open
macro o set browser "tmpFile=$(mktemp); echo %u >${tmpFile}; ${VISUAL:-${EDITOR:-vi --}} ${tmpFile}; ${BROWSER:-lynx --} $(cat -- ${tmpFile}; rm -f -- ${tmpFile})" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"
# macro O set browser "echo %u >>${HOME}/tmpfile-newsboat" ; open-all-unread-in-browser ; set browser "tmpFile=${HOME}/tmpfile-newsboat; ${VISUAL:-${EDITOR:-vi --}} ${tmpFile}; ${BROWSER:-lynx --} $(cat -- ${tmpFile}; rm -f ${tmpFile}) # %u" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"
# macro p set browser "if [ -x '/usr/bin/wget' ]; then wget -b -- %u; elif [ -x '/usr/bin/curl' ]; then curl -L -O -sS -- %u & fi" ; one ; set browser "${BROWSER:-lynx --} %u"
macro w pipe-to "${PAGER:-less}"

# Yank URL
macro y set browser "echo %u >>${VIMSTYLENEWSBOAT_YANKFILE:-${HOME}/newsboat-yank}" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"
# macro y set browser "printf '%s' %u | xsel --input --primary; printf '%s' %u | xsel --input --clipboard" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"
# macro y set browser "printf '%s' %u | xclip -selection 'primary'; printf '%s' %u | xclip -selection 'clipboard'" ; open-in-browser ; set browser "${BROWSER:-lynx --} %u"

# Yank Article
macro Y pipe-to "cat >>${VIMSTYLENEWSBOAT_YANKFILE:-${HOME}/newsboat-yank}"
# macro Y pipe-to "tmpFile=$(mktemp); cat >${tmpFile}; cat -- ${tmpFile} | xsel --input --primary; cat -- ${tmpFile} | xsel --input --clipboard; rm -f -- ${tmpFile}"
# macro Y pipe-to "tmpFile=$(mktemp); cat >${tmpFile}; cat -- ${tmpFile} | xclip -selection 'primary'; cat -- ${tmpFile} | xclip -selection 'clipboard'; rm -f -- ${tmpFile}"

# Yank Content Only
# macro Y pipe-to "sed -n -e '/^ *$/{:start; n; p; b start}' >>${VIMSTYLENEWSBOAT_YANKFILE:-${HOME}/newsboat-yank}"
# macro Y pipe-to "tmpFile=$(mktemp); sed -n -e '/^ *$/{:start; n; p; b start}' >${tmpFile}; cat -- ${tmpFile} | xsel --input --primary; cat -- ${tmpFile} | xsel --input --clipboard; rm -f -- ${tmpFile}"
# macro Y pipe-to "tmpFile=$(mktemp); sed -n -e '/^ *$/{:start; n; p; b start}' >${tmpFile}; cat -- ${tmpFile} | xclip -selection 'primary'; cat -- ${tmpFile} | xclip -selection 'clipboard'; rm -f -- ${tmpFile}"

macro ^R set auto-reload!
